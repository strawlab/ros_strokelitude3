#!/usr/bin/env python

import roslib
roslib.load_manifest('ros_strokelitude3')

import rospy
import sys
from ros_strokelitude3.msg import WingBeatInfo
from ros_strokelitude3.microfview import Microfview, CameraCapture
from ros_strokelitude3.strokelitude import Strokelitude3Plugin


class RosStrokelitude3Plugin(Strokelitude3Plugin):

    def __init__(self, *args, **kwargs):
        super(RosStrokelitude3Plugin, self).__init__(*args, **kwargs)
        self._pub = rospy.Publisher('/strokelitude3', WingBeatInfo)

    def publish_message(self, is_flying, angle_L, angle_R, err_L, err_R, freq, freq_err, leg_mean, leg_ptp):
        msg = WingBeatInfo(is_flying, angle_L, err_L, angle_R, err_R, freq, freq_err, leg_mean, leg_ptp)
        self._pub.publish(msg)


if __name__ == "__main__":

    rospy.init_node('strokelitude3')

    try:
        config = rospy.get_param('~')
    except KeyError:
        print "Please configure this node via env_stroklitude3.yaml and start via:"
        print "roslaunch ros_strokelitude3 strokelitude3.launch"
        exit()

    cam = CameraCapture(**config['camera'])
    fview = Microfview(cam, **config['microfview'])
    wingbeat = RosStrokelitude3Plugin(**config['strokelitude'])
    fview.attach_plugin(wingbeat)

    try:
        fview.start()
        rospy.spin()
    except KeyboardInterrupt:
        rospy.signal_shutdown("user request.")
    finally:
        fview.stop()
