#!/usr/bin/env python

import roslib
roslib.load_manifest('ros_strokelitude3')
roslib.load_manifest('strawlab_tethered_experiments')

from strawlab_tethered_experiments.exp.cylinderfancybarCL import FancyBarMessage

import rospy
import sys
from ros_strokelitude3.msg import WingBeatInfo
import time

class RosStrokelitude3TestEmitter(object):

    def __init__(self, *args, **kwargs):
        self._pub = rospy.Publisher('/strokelitude3', WingBeatInfo)

    def publish_message(self):
        msg = WingBeatInfo(True, 0.1, 0.0001, 0.002, 0.0001, 230., 15.)
        self._pub.publish(msg)


if __name__ == "__main__":

    msg = FancyBarMessage()
    msg.set_intensity("const", 0.0)
    msg.set_width("const", np.pi/8.)
    msg.set_position("const", np.pi)

    rospy.init_node('strokelitude3_test_emitter')

    wingbeat = RosStrokelitude3TestEmitter()

    while True:
        wingbeat.publish_message()
        time.sleep(0.005)
